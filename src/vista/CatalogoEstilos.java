/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Graphics;
import java.io.File;
import java.io.FileOutputStream;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Clientes;
import modelo.Estilos;
//import modelo.Estilos;
import modelo.Materiales;
import modelo.Personal;
import modelo.Procesos;
import modelo.Proveedores;
import net.sourceforge.barbecue.Barcode;
import net.sourceforge.barbecue.BarcodeFactory;
import net.sourceforge.barbecue.BarcodeImageHandler;
import vista.BuscaProveedor;
import persistencia.BD;
import persistencia.MetodosGlobales;


/**
 *
 * @author vikto
 */
public class CatalogoEstilos extends javax.swing.JInternalFrame {

    public static List<JRadioButton> radiosMateriales;
    public static List<JRadioButton> radiosProcesos;
    Estilos est = new Estilos();
    Procesos pro = new Procesos();
    Materiales mat = new Materiales();
    String strFileName = "";
    MetodosGlobales metodosGlobales = new MetodosGlobales();
    private static CatalogoEstilos catalogoEstilos;
     
     public class Imagen extends javax.swing.JPanel {
        public Imagen() {
            this.setSize(250, 150); //se selecciona el tamaño del panel
        }
        //Se crea un método cuyo parámetro debe ser un objeto Graphics
        public void paint(Graphics grafico) {
            Dimension height = getSize();
            //Se selecciona la imagen que tenemos en el paquete de la //ruta del programa
            ImageIcon Img = new ImageIcon(getClass().getResource("/codes/BarCode_0987654321.JPEG")); 
            //se dibuja la imagen que tenemos en el paquete Images //dentro de un panel
            grafico.drawImage(Img.getImage(), 10, 20, height.width, height.height, null);
            setOpaque(false);
            super.paintComponent(grafico);
        }
    }
     
     public static CatalogoEstilos getInstancia(){
         if (catalogoEstilos == null) {
             catalogoEstilos = new CatalogoEstilos();
         }
         return catalogoEstilos;
     }
     
    public CatalogoEstilos() {
        radiosMateriales = new ArrayList<>();
        radiosProcesos = new ArrayList<>();
        initComponents();
        mat.llenaPanelMateriales();
        pro.llenaPanelProcesos();
        LimpiaTablaEstilos(jTableEstilos);
        LimpiaTablaEstilos(jTableMateriales);
        LimpiaTablaEstilos(jTableProcesos);
        est.TablaConsultaEstilos();
//        est.consultaMateriales();
//        btnEliminar.setEnabled(false);
//        btnModifyPersonal.setEnabled(false);
////        jDCFechaNacimiento.setEnabled(false);
//        LimpiaTablaEstilos();
//        per.TablaConsultaPersonal();
//        pro.buscaPersonal(jCbProceso);
//        Imagen Imagen = new Imagen();
//        jPanelCodeBarras.add(Imagen);
//        jPanelCodeBarras.repaint();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtEstilo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEstilos = new javax.swing.JTable();
        btnAddPersonal = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnModifyPersonal = new javax.swing.JButton();
        jBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMateriales = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableProcesos = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        panelMateriales = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        panelProcesos = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Catálogo de Estilos");
        setAutoscrolls(true);

        jLabel1.setText("Nombre:");

        jTableEstilos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "id", "Estilo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEstilos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableEstilosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableEstilos);
        if (jTableEstilos.getColumnModel().getColumnCount() > 0) {
            jTableEstilos.getColumnModel().getColumn(0).setMinWidth(40);
            jTableEstilos.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        btnAddPersonal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar16.png"))); // NOI18N
        btnAddPersonal.setText("Agregar");
        btnAddPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPersonalActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/basura.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/borrar16.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnModifyPersonal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/girar.png"))); // NOI18N
        btnModifyPersonal.setText("Modificar");
        btnModifyPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyPersonalActionPerformed(evt);
            }
        });

        jBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/busqueda.png"))); // NOI18N
        jBuscar.setText("Búsqueda");
        jBuscar.setFocusable(false);
        jBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuscarActionPerformed(evt);
            }
        });

        jTableMateriales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Material"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMateriales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMaterialesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableMateriales);

        jTableProcesos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Proceso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProcesos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProcesosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableProcesos);

        panelMateriales.setLayout(new java.awt.GridLayout(0, 3));
        jScrollPane4.setViewportView(panelMateriales);

        panelProcesos.setLayout(new java.awt.GridLayout(0, 2));
        jScrollPane5.setViewportView(panelProcesos);

        jLabel2.setText("Materiales");

        jLabel3.setText("Procesos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(954, Short.MAX_VALUE)
                        .addComponent(jBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEstilo, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addGap(64, 64, 64)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAddPersonal)
                .addGap(18, 18, 18)
                .addComponent(btnModifyPersonal)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar)
                .addGap(302, 302, 302))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtEstilo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminar)
                            .addComponent(btnLimpiar)
                            .addComponent(btnModifyPersonal)
                            .addComponent(btnAddPersonal))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPersonalActionPerformed
        // TODO add your handling code here:
        List<JRadioButton> radiosSelectedMateriales = null;
        ArrayList radioTxtMateriales = new ArrayList();
        ArrayList radioTxtProcesos = new ArrayList();
        int cont = 0;
        for (int i = 0; i < radiosMateriales.size(); i++) {
            if(radiosMateriales.get(i).isSelected()){
                radioTxtMateriales.add(cont,radiosMateriales.get(i).getText());
                cont++;
            }
        }
        cont = 0;
        for (int i = 0; i < radiosProcesos.size(); i++) {
            if(radiosProcesos.get(i).isSelected()){
                radioTxtProcesos.add(cont,radiosProcesos.get(i).getText());
                cont++;
            }
        }
        
        for (int i = 0; i < radioTxtProcesos.size(); i++) {
            System.out.println("item radio: "+radioTxtProcesos.get(i));
        }
        if(radioTxtMateriales.size() == 0 && radioTxtProcesos.size() == 0 && txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Escriba un nombre, enseguida seleccione algunos materiales y procesos para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        }else if(radioTxtMateriales.size() == 0 && radioTxtProcesos.size() == 0 && !txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Seleccione algunos materiales y procesos para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        }else if(radioTxtMateriales.size() == 0 && radioTxtProcesos.size() > 0 && txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Escriba un nombre y seleccione algunos materiales para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        }else if(radioTxtMateriales.size() > 0 && radioTxtProcesos.size() == 0 && txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Escriba un nombre y seleccione algunos procesos para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        }else if(radioTxtMateriales.size() > 0 && radioTxtProcesos.size() > 0 && txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Escriba un nombre para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        }else if(radioTxtMateriales.size() > 0 && radioTxtProcesos.size() == 0 && !txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Seleccione algunos procesos para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        }else if(radioTxtMateriales.size() == 0 && radioTxtProcesos.size() > 0 && !txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Seleccione algunos materiales para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        } else {
            if(BD.conectarBD()){
                est.setEstilo(txtEstilo.getText());
                est.setTxtMateriales(radioTxtMateriales);
                est.setTxtProcesos(radioTxtProcesos);
                if(est.registrarEstilo()){
                    JOptionPane.showMessageDialog(rootPane, "Registro exitoso",
                        "Aviso",JOptionPane.INFORMATION_MESSAGE);
                    LimpiaCampos();
                    LimpiaTablaEstilos(jTableEstilos);
                    est.TablaConsultaEstilos();
                    BD.cerrarConexion();
                }else{
                    JOptionPane.showMessageDialog(rootPane, "No se registro el estilo "+est.getEstilo(),
                        "Aviso",JOptionPane.ERROR_MESSAGE);
                    BD.cerrarConexion();
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Error de conexión",
                        "Error",JOptionPane.ERROR_MESSAGE);
                BD.cerrarConexion();
            }
        }
    }//GEN-LAST:event_btnAddPersonalActionPerformed

    private void jTableEstilosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEstilosMouseClicked
        // TODO add your handling code here:
        btnAddPersonal.setEnabled(false);
        btnEliminar.setEnabled(true);
        btnModifyPersonal.setEnabled(true);
        btnLimpiar.setEnabled(true);
        
        if (evt.getClickCount() == 1) {
            est.ApuntaEstilo();
            LimpiaTablaEstilos(jTableMateriales);
            est.ApuntaEstiloMateriales();
            LimpiaTablaEstilos(jTableProcesos);
            est.ApuntaEstiloProcesos();
            txtEstilo.setText(est.getEstilo());
            
            ArrayList radioTxtMateriales = new ArrayList();
            ArrayList radioTxtProcesos = new ArrayList();
            for (int i = 0; i < radiosMateriales.size(); i++) {
                radioTxtMateriales.add(i,radiosMateriales.get(i).getText());
                System.out.println(radiosMateriales.get(i).getText()+": "+est.getTxtMateriales().indexOf(radiosMateriales.get(i).getText()));
                if(est.getTxtMateriales().indexOf(radiosMateriales.get(i).getText()) > -1){ 
                    radiosMateriales.get(i).setSelected(true);
                }
            }
            for (int i = 0; i < radiosProcesos.size(); i++) {
                radioTxtMateriales.add(i,radiosProcesos.get(i).getText());
                if(est.getTxtProcesos().indexOf(radiosProcesos.get(i).getText()) > -1){ 
                    radiosProcesos.get(i).setSelected(true);
                }
            }
//            jTxtAptPaterno.setText(per.getApellidoPaterno());
//            jTxtAptMaterno.setText(per.getApellidoMaterno());
//            Date date = null;
//            String textFecha = per.getFechaNacimiento();
//            DateFormat df = new SimpleDateFormat("dd/MM/yyyy", Locale.getDefault());
//            df.setTimeZone(TimeZone.getTimeZone("America/Mexico_City"));
//            try {
//                date = new java.sql.Date(df.parse(textFecha).getTime());
//            } catch (ParseException ex) {
//                Logger.getLogger(CatalogoEstilos.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            jDCFechaNacimiento.setDate(date);
//            jTxtDomicilio.setText(per.getDomicilio());
//            jTxtTelefono.setText(per.getTelefono());
//            jTxtCorreo.setText(per.getCorreo());
//            comboProceso.addElement(per.getProceso());
//            jCbProceso.setModel(comboProceso);
        }
        
    }//GEN-LAST:event_jTableEstilosMouseClicked

    private void btnModifyPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyPersonalActionPerformed

        ArrayList radioTxtMateriales = new ArrayList();
        ArrayList radioTxtProcesos = new ArrayList();
        int cont = 0;
        for (int i = 0; i < radiosMateriales.size(); i++) {
            if(radiosMateriales.get(i).isSelected()){
                radioTxtMateriales.add(cont,radiosMateriales.get(i).getText());
                cont++;
            }
        }
        cont = 0;
        for (int i = 0; i < radiosProcesos.size(); i++) {
            if(radiosProcesos.get(i).isSelected()){
                radioTxtProcesos.add(cont,radiosProcesos.get(i).getText());
                cont++;
            }
        }
        
        for (int i = 0; i < radioTxtProcesos.size(); i++) {
            System.out.println("item radio: "+radioTxtProcesos.get(i));
        }
        if(radioTxtMateriales.size() == 0 && radioTxtProcesos.size() == 0 && txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Escriba un nombre, enseguida seleccione algunos materiales y procesos para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        }else if(radioTxtMateriales.size() == 0 && radioTxtProcesos.size() == 0 && !txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Seleccione algunos materiales y procesos para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        }else if(radioTxtMateriales.size() == 0 && radioTxtProcesos.size() > 0 && txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Escriba un nombre y seleccione algunos materiales para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        }else if(radioTxtMateriales.size() > 0 && radioTxtProcesos.size() == 0 && txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Escriba un nombre y seleccione algunos procesos para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        }else if(radioTxtMateriales.size() > 0 && radioTxtProcesos.size() > 0 && txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Escriba un nombre para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        }else if(radioTxtMateriales.size() > 0 && radioTxtProcesos.size() == 0 && !txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Seleccione algunos procesos para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        }else if(radioTxtMateriales.size() == 0 && radioTxtProcesos.size() > 0 && !txtEstilo.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Seleccione algunos materiales para el estilo.",
                            "Aviso",JOptionPane.WARNING_MESSAGE);
        } else {
            if(BD.conectarBD()){
                int fila = jTableEstilos.getSelectedRow();
                est.setIdEstilo((int)jTableEstilos.getValueAt(fila, 0));
                est.setEstilo(txtEstilo.getText());
                est.setTxtMateriales(radioTxtMateriales);
                est.setTxtProcesos(radioTxtProcesos);
                if(est.ActualizarEstilo()){
                    JOptionPane.showMessageDialog(rootPane, "Registro exitoso",
                        "Aviso",JOptionPane.INFORMATION_MESSAGE);
                    LimpiaCampos();
                    MetodosGlobales.LimpiaTabla(jTableEstilos);
                    est.TablaConsultaEstilos();
                    btnAddPersonal.setEnabled(true);
                    btnModifyPersonal.setEnabled(false);
                    btnEliminar.setEnabled(false);
                    
                    BD.cerrarConexion();
                }else{
                    JOptionPane.showMessageDialog(rootPane, "No se Actualizo el estilo "+est.getEstilo(),
                        "Aviso",JOptionPane.ERROR_MESSAGE);
                    BD.cerrarConexion();
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Error de conexión",
                        "Error",JOptionPane.ERROR_MESSAGE);
                BD.cerrarConexion();
            }
        }
        
//        if (JOptionPane.showConfirmDialog(rootPane, "Se modificará el estilo, ¿Desea continuar?",
//            "Aviso", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
//            btnModifyPersonal.setEnabled(false);
//            btnEliminar.setEnabled(false);
//            btnAddPersonal.setEnabled(true);
//         if(txtEstilo.getText().equals("")) {
//                JOptionPane.showMessageDialog(rootPane, "Llena todos los campos obligatorios",
//                                    "Aviso",JOptionPane.WARNING_MESSAGE);
//            } else {
//                    ArrayList radioTxtMateriales = new ArrayList();
//                    ArrayList radioTxtProcesos = new ArrayList();
//            
//                if(BD.conectarBD()){
//                    est.setEstilo(txtEstilo.getText());
//                    for (int i = 0; i < radiosMateriales.size(); i++) {
//                        radioTxtMateriales.add(i,radiosMateriales.get(i).getText());
//                        System.out.println(radiosMateriales.get(i).getText()+": "+est.getTxtMateriales().indexOf(radiosMateriales.get(i).getText()));
//                       if(radiosMateriales.get(i).isSelected()){ 
//                            est.setMaterial(radiosMateriales.get(i).getText());
//                        }
//                    }                           
//                    try {
//                        est.ActualizarEstilo(jTableEstilos);
//                        JOptionPane.showMessageDialog(rootPane, "Actualización exitosa",
//                            "Aviso",JOptionPane.INFORMATION_MESSAGE);
//                        LimpiaCampos();
//                        MetodosGlobales.LimpiaTabla(jTableEstilos);
//                        est.TablaConsultaEstilos();
//                    } catch (Exception e) {
//                        JOptionPane.showMessageDialog(rootPane, "No se actualizó el estilo: "+e,
//                            "Error",JOptionPane.ERROR_MESSAGE);
//                        BD.cerrarConexion();
//                    }
//                }else{
//                    JOptionPane.showMessageDialog(rootPane, "Error de conexión",
//                            "Error",JOptionPane.ERROR_MESSAGE);
//                    BD.cerrarConexion();
//                }
//            }
//        }
    }//GEN-LAST:event_btnModifyPersonalActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        LimpiaCampos();
        btnAddPersonal.setEnabled(true);
        btnEliminar.setEnabled(false);
        btnModifyPersonal.setEnabled(false);
        LimpiaTablaEstilos(jTableMateriales);
        LimpiaTablaEstilos(jTableProcesos);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        
        if (JOptionPane.showConfirmDialog(rootPane, "Se eliminará el estilo junto con sus materiales y procesos. ¿Desea continuar?",
            "Aviso", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){    
            if(BD.conectarBD()){
                try {
                    int fila = jTableEstilos.getSelectedRow();
                    est.setIdEstilo((int)jTableEstilos.getValueAt(fila, 0));
                    est.eliminaEstilo();
                    JOptionPane.showMessageDialog(rootPane, "El estilo se eliminó con éxito",
                        "Aviso",JOptionPane.INFORMATION_MESSAGE);
                    btnAddPersonal.setEnabled(true);
                    btnModifyPersonal.setEnabled(false);
                    btnEliminar.setEnabled(false);
                    LimpiaCampos();
                    MetodosGlobales.LimpiaTabla(jTableEstilos);
                    MetodosGlobales.LimpiaTabla(jTableMateriales);
                    MetodosGlobales.LimpiaTabla(jTableProcesos);
                    est.TablaConsultaEstilos();
                    
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "No se eliminó el estilo: "+e,
                        "Aviso",JOptionPane.WARNING_MESSAGE);
                    BD.cerrarConexion();
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Error de conexión",
                        "Error",JOptionPane.ERROR_MESSAGE);
                BD.cerrarConexion();
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuscarActionPerformed
//        BuscadorProveedor miVentanaBuscar = null;
//        
//        miVentanaBuscar = new BuscadorProveedor(miVentanaBuscar,true);
//        miVentanaBuscar.setVisible(true);

        Frame frame = JOptionPane.getFrameForComponent(this);
        BuscaEstilo buscaEstilo = new BuscaEstilo(frame,true);
        Dimension desktopSize = Main.jDesktopMain.getSize();
        Dimension FrameSize = buscaEstilo.getSize();
        buscaEstilo.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
        buscaEstilo.show();
    }//GEN-LAST:event_jBuscarActionPerformed

    private void jTableMaterialesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMaterialesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableMaterialesMouseClicked

    private void jTableProcesosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProcesosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableProcesosMouseClicked

    public void LimpiaTablaEstilos(JTable dataTable){
        try {
            DefaultTableModel modelo = (DefaultTableModel)dataTable.getModel();
            int filas = dataTable.getRowCount();
            for (int i = 0; filas > i; i++) {
                modelo.removeRow(0);
            }
            System.out.println("Limpieza exitosa!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error al intentar limpiar la tabla Estilos: "+e,
                    "Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void LimpiaCampos(){
        txtEstilo.setText(null);
        for (int i = 0; i < radiosMateriales.size(); i++) {
            if(radiosMateriales.get(i).isSelected()){
                radiosMateriales.get(i).setSelected(false);
            }
        }
        for (int i = 0; i < radiosProcesos.size(); i++) {
            if(radiosProcesos.get(i).isSelected()){
                radiosProcesos.get(i).setSelected(false);
            }
        }
    }
    
    private void llenaPanelMateriales(){
        JRadioButton  boton = new JRadioButton("Radio");
        panelMateriales.add(boton);
        radiosMateriales.add(boton);
        panelMateriales.updateUI();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPersonal;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModifyPersonal;
    private javax.swing.JButton jBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    public static javax.swing.JTable jTableEstilos;
    public static javax.swing.JTable jTableMateriales;
    public static javax.swing.JTable jTableProcesos;
    public static javax.swing.JPanel panelMateriales;
    public static javax.swing.JPanel panelProcesos;
    public static javax.swing.JTextField txtEstilo;
    // End of variables declaration//GEN-END:variables
}
