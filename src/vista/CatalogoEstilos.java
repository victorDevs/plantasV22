/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Graphics;
import java.io.File;
import java.io.FileOutputStream;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;
import modelo.Clientes;
import modelo.Estilos;
//import modelo.Estilos;
import modelo.Materiales;
import modelo.Personal;
import modelo.Procesos;
import modelo.Proveedores;
import net.sourceforge.barbecue.Barcode;
import net.sourceforge.barbecue.BarcodeFactory;
import net.sourceforge.barbecue.BarcodeImageHandler;
import vista.BuscaProveedor;
import persistencia.BD;
import persistencia.MetodosGlobales;


/**
 *
 * @author vikto
 */
public class CatalogoEstilos extends javax.swing.JInternalFrame {

    public static List<JRadioButton> radiosMateriales;
    public static List<JRadioButton> radiosProcesos;
    
//    Estilos est = new Estilos();
    Procesos pro = new Procesos();
    Materiales mat = new Materiales();
    
    String strFileName = "";

    MetodosGlobales metodosGlobales = new MetodosGlobales();
     
     private static CatalogoEstilos catalogoEstilos;
     
     public class Imagen extends javax.swing.JPanel {
        public Imagen() {
            this.setSize(250, 150); //se selecciona el tamaño del panel
        }
        
        //Se crea un método cuyo parámetro debe ser un objeto Graphics
        public void paint(Graphics grafico) {
            Dimension height = getSize();

            //Se selecciona la imagen que tenemos en el paquete de la //ruta del programa
            ImageIcon Img = new ImageIcon(getClass().getResource("/codes/BarCode_0987654321.JPEG")); 

            //se dibuja la imagen que tenemos en el paquete Images //dentro de un panel
            grafico.drawImage(Img.getImage(), 10, 20, height.width, height.height, null);

            setOpaque(false);
            super.paintComponent(grafico);
        }
    }
     
     public static CatalogoEstilos getInstancia(){
         if (catalogoEstilos == null) {
             catalogoEstilos = new CatalogoEstilos();
         }
         return catalogoEstilos;
     }
     
    public CatalogoEstilos() {
        radiosMateriales = new ArrayList<>();
        radiosProcesos = new ArrayList<>();
        initComponents();
        mat.llenaPanelMateriales();
        pro.llenaPanelProcesos();
//        est.consultaMateriales();
//        btnEliminar.setEnabled(false);
//        btnModifyPersonal.setEnabled(false);
////        jDCFechaNacimiento.setEnabled(false);
//        LimpiaTablaPersonal();
//        per.TablaConsultaPersonal();
//        pro.buscaPersonal(jCbProceso);
//        Imagen Imagen = new Imagen();
//        jPanelCodeBarras.add(Imagen);
//        jPanelCodeBarras.repaint();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTxtNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersonal = new javax.swing.JTable();
        btnAddPersonal = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnModifyPersonal = new javax.swing.JButton();
        jBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePersonal1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePersonal2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        panelMateriales = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        panelProcesos = new javax.swing.JPanel();

        setClosable(true);
        setTitle("Catálogo de Estilos");
        setAutoscrolls(true);

        jLabel1.setText("Nombre:");

        jTablePersonal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "id", "Estilo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePersonalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePersonal);
        if (jTablePersonal.getColumnModel().getColumnCount() > 0) {
            jTablePersonal.getColumnModel().getColumn(0).setMinWidth(40);
            jTablePersonal.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        btnAddPersonal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar16.png"))); // NOI18N
        btnAddPersonal.setText("Agregar");
        btnAddPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPersonalActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/basura.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/borrar16.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnModifyPersonal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/girar.png"))); // NOI18N
        btnModifyPersonal.setText("Modificar");
        btnModifyPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyPersonalActionPerformed(evt);
            }
        });

        jBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/busqueda.png"))); // NOI18N
        jBuscar.setText("Búsqueda");
        jBuscar.setFocusable(false);
        jBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuscarActionPerformed(evt);
            }
        });

        jTablePersonal1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "id", "Material"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonal1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePersonal1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTablePersonal1);
        if (jTablePersonal1.getColumnModel().getColumnCount() > 0) {
            jTablePersonal1.getColumnModel().getColumn(0).setMinWidth(40);
            jTablePersonal1.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        jTablePersonal2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "id", "Proceso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonal2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePersonal2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTablePersonal2);
        if (jTablePersonal2.getColumnModel().getColumnCount() > 0) {
            jTablePersonal2.getColumnModel().getColumn(0).setMinWidth(40);
            jTablePersonal2.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        panelMateriales.setLayout(new java.awt.GridLayout(0, 3));
        jScrollPane4.setViewportView(panelMateriales);

        panelProcesos.setLayout(new java.awt.GridLayout(1, 3));
        jScrollPane5.setViewportView(panelProcesos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(954, Short.MAX_VALUE)
                        .addComponent(jBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(64, 64, 64)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAddPersonal)
                .addGap(18, 18, 18)
                .addComponent(btnModifyPersonal)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar)
                .addGap(302, 302, 302))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jBuscar)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminar)
                            .addComponent(btnLimpiar)
                            .addComponent(btnModifyPersonal)
                            .addComponent(btnAddPersonal))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPersonalActionPerformed
        // TODO add your handling code here:
        System.out.println("Numero de radioMateriales: "+radiosMateriales.size());
        for (int i = 0; i < radiosMateriales.size(); i++) {
            if(radiosMateriales.get(i).isSelected()){
                System.out.println(radiosMateriales.get(i).getText());
            }
        }
//        String proceso = (String) jCbProceso.getSelectedItem();
//        Date date = jDCFechaNacimiento.getDate();
//        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//        if(jTxtNombre.getText().equals("") || jTxtAptPaterno.getText().equals("")
//                || jTxtAptMaterno.getText().equals("") || jTxtDomicilio.equals("") 
//                || jTxtTelefono.equals("") || jTxtCorreo.equals("") || proceso.equals(" - Proceso - ")) {
//            JOptionPane.showMessageDialog(rootPane, "Llena todos los campos obligatorios",
//                                "Aviso",JOptionPane.WARNING_MESSAGE);
//        } else {
//            if(metodosGlobales.validaFecha(jDCFechaNacimiento)==null){
//                JOptionPane.showMessageDialog(rootPane, "Campo de fecha vacío o formato incorrecto",
//                                "Aviso",JOptionPane.WARNING_MESSAGE);
//            }else{
//                if(BD.conectarBD()){
//                    per.setNombre(jTxtNombre.getText());
//                    per.setApellidoPaterno(jTxtAptPaterno.getText());
//                    per.setApellidoMaterno(jTxtAptMaterno.getText());
//                    per.setFechaNacimiento(sdf.format(date));
//                    per.setDomicilio(jTxtDomicilio.getText());
//                    per.setTelefono(jTxtTelefono.getText());
//                    per.setCorreo(jTxtCorreo.getText());
//                    per.setProceso(proceso);
//                    if(per.RegistraPersonal()){
//                        Barcode barcode = null;
//                        String strCode = "0987654321";
//                        try {
//                            barcode = BarcodeFactory.createCode39(strCode, true);
//                        } catch (Exception e) {
//                            JOptionPane.showMessageDialog(null, "El código de barras para el trabajador no se creó correctamente: "+e, 
//                                    "Aviso", JOptionPane.WARNING_MESSAGE);
//                        }
//                        barcode.setDrawingText(true);
//                        barcode.setBarWidth(2);
//                        barcode.setBarHeight(60);
//
//                        try {
//                            strFileName = "C:\\Users\\vikto\\OneDrive\\Documentos\\NetBeansProjects\\plantasV2\\src\\codes\\BarCode_"+strCode+".JPEG";
//                            //strFileName = "C:\\Users\\alber\\Documents\\NetBeansProjects\\plantasV2\\src\\codes\\BarCode_"+strCode+".JPEG";
//                            File file = new File(strFileName);
//                            file.setExecutable(true);
//                            file.setReadable(true);
//                            file.setWritable(true);
//                            FileOutputStream fos = new FileOutputStream(file);
//                            BarcodeImageHandler.writeJPEG(barcode, fos);
//                            System.out.println("Archivo creado: "+strFileName);
//                        } catch (Exception e) {
//                            JOptionPane.showMessageDialog(null, "La imagen del código de barras no se guardo como imagen correctamente"+e, 
//                                    "Aviso", JOptionPane.WARNING_MESSAGE);
//                        }
////                        Imagen Imagen = new Imagen();
////                        jPanelCodeBarras.add(Imagen);
////                        jPanelCodeBarras.repaint();
//                        JOptionPane.showMessageDialog(rootPane, "Registro exitoso",
//                            "Aviso",JOptionPane.INFORMATION_MESSAGE);
//                        LimpiaCampos();
//                        LimpiaTablaPersonal();
//                        per.TablaConsultaPersonal();
//                    }else{
//                        JOptionPane.showMessageDialog(rootPane, "No se registro el personal",
//                            "Error",JOptionPane.ERROR_MESSAGE);
//                        BD.cerrarConexion();
//                    }
////                    try {
////                        
////                        per.RegistraPersonal();
////                        JOptionPane.showMessageDialog(rootPane, "Registro exitoso",
////                            "Aviso",JOptionPane.INFORMATION_MESSAGE);
////                        LimpiaCampos();
////                        LimpiaTablaPersonal();
////                        per.TablaConsultaPersonal();
////                    } catch (Exception e) {
////                        JOptionPane.showMessageDialog(rootPane, "No se registro el personal",
////                            "Error",JOptionPane.ERROR_MESSAGE);
//////                        System.out.println("Error al registrar un cliente: "+e);
////                        BD.cerrarConexion();
////                    }
//                }else{
//                    JOptionPane.showMessageDialog(rootPane, "Error de conexión",
//                            "Error",JOptionPane.ERROR_MESSAGE);
//                    BD.cerrarConexion();
//                }
//            }
//        }
    }//GEN-LAST:event_btnAddPersonalActionPerformed

    private void jTablePersonalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePersonalMouseClicked
        // TODO add your handling code here:
//        DefaultComboBoxModel comboProceso = new DefaultComboBoxModel();
//        
//        btnAddPersonal.setEnabled(false);
//        btnEliminar.setEnabled(true);
//        btnModifyPersonal.setEnabled(true);
//        btnLimpiar.setEnabled(true);
//        
//        if (evt.getClickCount() == 1) {
//            per.ApuntaPersonal();
//            jTxtNombre.setText(per.getNombre());
//            jTxtAptPaterno.setText(per.getApellidoPaterno());
//            jTxtAptMaterno.setText(per.getApellidoMaterno());
//            Date date = null;
//            String textFecha = per.getFechaNacimiento();
//            DateFormat df = new SimpleDateFormat("dd/MM/yyyy", Locale.getDefault());
//            df.setTimeZone(TimeZone.getTimeZone("America/Mexico_City"));
//            try {
//                date = new java.sql.Date(df.parse(textFecha).getTime());
//            } catch (ParseException ex) {
//                Logger.getLogger(CatalogoEstilos.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            jDCFechaNacimiento.setDate(date);
//            jTxtDomicilio.setText(per.getDomicilio());
//            jTxtTelefono.setText(per.getTelefono());
//            jTxtCorreo.setText(per.getCorreo());
//            comboProceso.addElement(per.getProceso());
//            jCbProceso.setModel(comboProceso);
//        }
        
    }//GEN-LAST:event_jTablePersonalMouseClicked

    private void btnModifyPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyPersonalActionPerformed
        // TODO add your handling code here:
//        String proceso = (String) jCbProceso.getSelectedItem();
//        if (JOptionPane.showConfirmDialog(rootPane, "Se modificará el personal, ¿Desea continuar?",
//            "Aviso", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
//            Date date = jDCFechaNacimiento.getDate();
//            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//            btnModifyPersonal.setEnabled(false);
//            btnEliminar.setEnabled(false);
//            btnAddPersonal.setEnabled(true);
//         if(jTxtNombre.getText().equals("") || jTxtAptPaterno.getText().equals("")
//            || jTxtAptMaterno.getText().equals("") || sdf.format(date).equals("") 
//            || jTxtDomicilio.equals("") || jTxtTelefono.equals("") || jTxtCorreo.equals("") || proceso.equals(" - Proceso - ")) {
//                JOptionPane.showMessageDialog(rootPane, "Llena todos los campos obligatorios",
//                                    "Aviso",JOptionPane.WARNING_MESSAGE);
//            } else {
//                if(BD.conectarBD()){
//                    per.setNombre(jTxtNombre.getText());
//                    per.setApellidoPaterno(jTxtAptPaterno.getText());
//                    per.setApellidoMaterno(jTxtAptMaterno.getText());
//                    per.setFechaNacimiento(sdf.format(date));
//                    per.setDomicilio(jTxtDomicilio.getText());
//                    per.setTelefono(jTxtTelefono.getText());
//                    per.setCorreo(jTxtCorreo.getText());
//                    per.setProceso(proceso);                             
//                    try {
//                        per.ActualizarPersonal(jTablePersonal);
//                        JOptionPane.showMessageDialog(rootPane, "Actualización exitosa",
//                            "Aviso",JOptionPane.INFORMATION_MESSAGE);
//                        LimpiaCampos();
//                        LimpiaTablaPersonal();
//                        per.TablaConsultaPersonal();
//                    } catch (Exception e) {
//                        JOptionPane.showMessageDialog(rootPane, "No se actualizó el personal: "+e,
//                            "Error",JOptionPane.ERROR_MESSAGE);
//                        BD.cerrarConexion();
//                    }
//                }else{
//                    JOptionPane.showMessageDialog(rootPane, "Error de conexión",
//                            "Error",JOptionPane.ERROR_MESSAGE);
//                    BD.cerrarConexion();
//                }
//            }
//        }
    }//GEN-LAST:event_btnModifyPersonalActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        LimpiaCampos();
        btnAddPersonal.setEnabled(true);
        btnEliminar.setEnabled(false);
        btnModifyPersonal.setEnabled(false);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
//        if (JOptionPane.showConfirmDialog(rootPane, "Se eliminará el personal, ¿Desea continuar?",
//            "Aviso", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){    
//            if(BD.conectarBD()){
//                try {
//                    per.EliminaPersonal(jTablePersonal);
//                    JOptionPane.showMessageDialog(rootPane, "El personal se eliminó con éxito",
//                        "Aviso",JOptionPane.INFORMATION_MESSAGE);
//                    LimpiaCampos();
//                    LimpiaTablaPersonal();
//                    per.TablaConsultaPersonal();
//                } catch (Exception e) {
//                    JOptionPane.showMessageDialog(rootPane, "No se eliminó el personal: "+e,
//                        "Aviso",JOptionPane.WARNING_MESSAGE);
//                    BD.cerrarConexion();
//                }
//            }else{
//                JOptionPane.showMessageDialog(rootPane, "Error de conexión",
//                        "Error",JOptionPane.ERROR_MESSAGE);
//                BD.cerrarConexion();
//            }
//        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuscarActionPerformed
//        BuscadorProveedor miVentanaBuscar = null;
//        
//        miVentanaBuscar = new BuscadorProveedor(miVentanaBuscar,true);
//        miVentanaBuscar.setVisible(true);

        Frame frame = JOptionPane.getFrameForComponent(this);
        BuscaPersonal buscaPer = new BuscaPersonal(frame,true);
        Dimension desktopSize = Main.jDesktopMain.getSize();
        Dimension FrameSize = buscaPer.getSize();
        buscaPer.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
        buscaPer.show();
    }//GEN-LAST:event_jBuscarActionPerformed

    private void jTablePersonal1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePersonal1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTablePersonal1MouseClicked

    private void jTablePersonal2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePersonal2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTablePersonal2MouseClicked

    public void LimpiaTablaPersonal(){
        try {
            DefaultTableModel modelo = (DefaultTableModel)jTablePersonal.getModel();
            int filas = jTablePersonal.getRowCount();
            for (int i = 0; filas > i; i++) {
                modelo.removeRow(0);
            }
            System.out.println("Limpieza exitosa!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error al intentar limpiar la tabla Clientes: "+e,
                    "Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void LimpiaCampos(){
//        jTxtNombre.setText(null);
//        jTxtAptPaterno.setText(null);
//        jTxtAptMaterno.setText(null);
//        jDCFechaNacimiento.setDate(null);
//        jTxtDomicilio.setText(null);
//        jTxtTelefono.setText(null);
//        jTxtCorreo.setText(null);
//        pro.buscaPersonal(jCbProceso);
    }
    
    private void llenaPanelMateriales(){
        JRadioButton  boton = new JRadioButton("Radio");
        panelMateriales.add(boton);
        radiosMateriales.add(boton);
        panelMateriales.updateUI();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPersonal;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModifyPersonal;
    private javax.swing.JButton jBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    public static javax.swing.JTable jTablePersonal;
    public static javax.swing.JTable jTablePersonal1;
    public static javax.swing.JTable jTablePersonal2;
    public static javax.swing.JTextField jTxtNombre;
    public static javax.swing.JPanel panelMateriales;
    public static javax.swing.JPanel panelProcesos;
    // End of variables declaration//GEN-END:variables
}
